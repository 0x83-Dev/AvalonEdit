<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>ICSharpCode.AvalonEdit.Editing Namespace</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="730721e7-4a43-d7c9-6eb0-09ffcb7ffceb" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="N:ICSharpCode.AvalonEdit.Editing" /><MSHelp:Keyword Index="A" Term="N:ICSharpCode.AvalonEdit.Editing" /><MSHelp:Keyword Index="A" Term="frlrfICSharpCodeAvalonEditEditing" /><MSHelp:Keyword Index="K" Term="ICSharpCode.AvalonEdit.Editing namespace" /><MSHelp:Keyword Index="F" Term="ICSharpCode.AvalonEdit.Editing" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="This namespace is the home of the TextArea class. It manages user input and handles the caret and the selection." /></xml></head><body><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="control"><span class="productTitle">AvalonEdit</span><br /><span class="topicTitle">ICSharpCode.AvalonEdit.Editing Namespace</span><br /><div id="toolbar"><span id="chickenFeet"><a href="75065dd5-cc9c-f686-0ed6-ee9ab678809a.htm">Namespaces</a> ► <span class="selflink">ICSharpCode.AvalonEdit.Editing</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span></div></div><div id="main"><span style="color: DarkGray"></span><div class="summary">This namespace is the home of the TextArea class. It manages user input and handles the caret and the selection.</div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
<span class="keyword">namespace</span> <span class="identifier">ICSharpCode.AvalonEdit.Editing</span></pre></div><div class="code" x-lang="VisualBasic"><pre xml:space="preserve">
<span class="keyword">Namespace</span> <span class="identifier">ICSharpCode.AvalonEdit.Editing</span></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre xml:space="preserve">
<span class="keyword">namespace</span> <span class="identifier">ICSharpCode.AvalonEdit.Editing</span></pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Types</div><div class="sectionContent"><div id="typeSection"><table class="filter"><tr class="tabs" id="typeFilter"><td class="tab" value="all" onclick="toggleClass('typeFilter','value','all','activeTab','tab'); processSubgroup('all', 'type'); processList('typeList','filterElement', 'type');">All Types</td><td class="tab" value="class" onclick="toggleClass('typeFilter','value','class','activeTab','tab'); processSubgroup('class', 'type'); processList('typeList','filterElement','type');">Classes</td><td class="tab" value="interface" onclick="toggleClass('typeFilter','value','interface','activeTab','tab'); processSubgroup('interface', 'type'); processList('typeList','filterElement','type');">Interfaces</td></tr></table><table id="typeList" class="members"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Type</th><th class="descriptionColumn">Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="14000e47-b5a4-5491-5c2b-7e0d0a6194ff.htm">AbstractMargin</a></b></td><td><div class="summary">
            Base class for margins.
            Margins don't have to derive from this class, it just helps maintaining a reference to the TextView
            and the TextDocument.
            AbstractMargin derives from FrameworkElement, so if you don't want to handle visual children and rendering
            on your own, choose another base class for your margin!
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="913a329c-172c-2b05-7344-a5fd648e654b.htm">Caret</a></b></td><td><div class="summary">
            Helper class with caret-related methods.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="ef17dc9e-0c8c-fc63-db7a-9792e3829477.htm">CaretWeakEventManager</a></b></td><td><div class="summary">
            Contains classes for handling weak events on the Caret class.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="4225398a-b9c7-af14-8672-afa5bfd2e137.htm">DottedLineMargin</a></b></td><td><div class="summary">
            Margin for use with the text area.
            A vertical dotted line to separate the line numbers from the text view.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="d64132a3-b703-f597-acf8-d59ec1d21277.htm">DragDropException</a></b></td><td><div class="summary">
            Wraps exceptions that occur during drag'n'drop.
            Exceptions during drag'n'drop might
            get swallowed by WPF/COM, so AvalonEdit catches them and re-throws them later
            wrapped in a DragDropException.
            </div><br /></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" /></td><td><b><a href="60a81515-53f3-6d0f-7c9b-cc73123944c3.htm">IReadOnlySectionProvider</a></b></td><td><div class="summary">
            Determines whether the document can be modified.
            </div><br /></td></tr><tr data="interface; public"><td><img src="../icons/pubinterface.gif" /></td><td><b><a href="3fea151b-237c-60d1-9aac-eb3d41cb404c.htm">ITextAreaInputHandler</a></b></td><td><div class="summary">
            A set of input bindings and event handlers for the text area.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="187ef097-47c9-7f64-af7e-2bd051873b66.htm">LineNumberMargin</a></b></td><td><div class="summary">
            Margin showing line numbers.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="d464330d-1da3-9da0-9537-2ce73c588e49.htm">CaretWeakEventManager<span class="languageSpecificText"><span class="cs">.</span><span class="vb">.</span><span class="cpp">::</span><span class="nu">.</span><span class="fs">.</span></span>PositionChanged</a></b></td><td><div class="summary">
            Handles the Caret.PositionChanged event.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="4e926495-e6f5-190e-095e-bd47b2ea489c.htm">RectangleSelection</a></b></td><td><div class="summary">
            Rectangular selection ("box selection").
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="f8d4e911-27e2-84bf-5a9b-e3ad50adf193.htm">Selection</a></b></td><td><div class="summary">
            Base class for selections.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="f993d993-0c3f-bdfc-95bd-ef198302b47c.htm">SelectionSegment</a></b></td><td><div class="summary">
            Represents a selected segment.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="9a98af6b-0702-1b2f-2465-683d3987fd0e.htm">TextArea</a></b></td><td><div class="summary">
            Control that wraps a TextView and adds support for user input and the caret.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="19199856-3ed4-45cb-ede5-8dc5f7ded988.htm">TextAreaDefaultInputHandler</a></b></td><td><div class="summary">
            Contains the predefined input handlers.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="df0daab3-d1e8-715d-039b-40335a4bf712.htm">TextAreaInputHandler</a></b></td><td><div class="summary">
            Default-implementation of <a href="3fea151b-237c-60d1-9aac-eb3d41cb404c.htm">ITextAreaInputHandler</a>.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="eb291c8a-c27f-3d88-1f6b-4abd973d7172.htm">TextAreaStackedInputHandler</a></b></td><td><div class="summary">
            Stacked input handler.
            Uses OnEvent-methods instead of registering event handlers to ensure that the events are handled in the correct order.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="5fea7ae1-991d-b086-a1a4-c035d19904f2.htm">TextEventArgs</a></b></td><td><div class="summary">
            EventArgs with text.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="d0f0cb0d-dc1b-71d1-1d69-3e61b43138a3.htm">TextSegmentReadOnlySectionProvider<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            Implementation for <a href="60a81515-53f3-6d0f-7c9b-cc73123944c3.htm">IReadOnlySectionProvider</a> that stores the segments
            in a <a href="538b3029-9986-315f-4023-c3f34eb05db7.htm">TextSegmentCollection<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a>.
            </div><br /></td></tr></table></div></div></div><div id="footer"><p />Copyright 2008-2014, Daniel Grunwald</div></div></body></html>