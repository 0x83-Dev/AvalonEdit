<html xmlns:MSHelp="http://msdn.microsoft.com/mshelp"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><title>ICSharpCode.AvalonEdit.Utils Namespace</title><link rel="stylesheet" type="text/css" href="../styles/presentation.css" /><script type="text/javascript" src="../scripts/script_prototype.js"> </script><script type="text/javascript" src="../scripts/EventUtilities.js"> </script><script type="text/javascript" src="../scripts/StyleUtilities.js"> </script><script type="text/javascript" src="../scripts/SplitScreen.js"> </script><script type="text/javascript" src="../scripts/ElementCollection.js"> </script><script type="text/javascript" src="../scripts/MemberFilter.js"> </script><script type="text/javascript" src="../scripts/CollapsibleSection.js"> </script><script type="text/javascript" src="../scripts/LanguageFilter.js"> </script><script type="text/javascript" src="../scripts/CookieDataStore.js"> </script><meta name="file" content="f3dcd65c-ae65-c9c3-08a5-428028010463" /><xml xmlns:msxsl="urn:schemas-microsoft-com:xslt"><MSHelp:Attr Name="AssetID" Value="N:ICSharpCode.AvalonEdit.Utils" /><MSHelp:Keyword Index="A" Term="N:ICSharpCode.AvalonEdit.Utils" /><MSHelp:Keyword Index="A" Term="frlrfICSharpCodeAvalonEditUtils" /><MSHelp:Keyword Index="K" Term="ICSharpCode.AvalonEdit.Utils namespace" /><MSHelp:Keyword Index="F" Term="ICSharpCode.AvalonEdit.Utils" /><MSHelp:Attr Name="TopicType" Value="apiref" /><MSHelp:Attr Name="TopicType" Value="kbSyntax" /><MSHelp:Attr Name="Locale" Value="en-us" /><MSHelp:Attr Name="Abstract" Value="This namespace contains various utility classes." /></xml></head><body><img id="copyImage" style="display:none; height:0; width:0;" src="../icons/copycode.gif" alt="Copy image" title="Copy image" /><img id="copyHoverImage" style="display:none; height:0; width:0;" src="../icons/copycodeHighlight.gif" alt="CopyHover image" title="CopyHover image" /><div id="control"><span class="productTitle">AvalonEdit</span><br /><span class="topicTitle">ICSharpCode.AvalonEdit.Utils Namespace</span><br /><div id="toolbar"><span id="chickenFeet"><a href="75065dd5-cc9c-f686-0ed6-ee9ab678809a.htm">Namespaces</a> ► <span class="selflink">ICSharpCode.AvalonEdit.Utils</span></span><span id="languageFilter"><select id="languageSelector" onchange="var names = this.value.split(' '); toggleVisibleLanguage(names[1]); lfc.switchLanguage(names[0]); store.set('lang',this.value); store.save();"><option value="CSharp cs">C#</option><option value="VisualBasic vb">Visual Basic</option><option value="ManagedCPlusPlus cpp">Visual C++</option></select></span></div></div><div id="main"><span style="color: DarkGray"></span><div class="summary">This namespace contains various utility classes.</div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Declaration Syntax</div><div class="sectionContent"><div id="syntaxSection"><table class="filter"><tr class="tabs" id="syntaxTabs"><td class="tab" x-lang="CSharp" onclick="toggleClass('syntaxTabs','x-lang','CSharp','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','CSharp','display','block','none');">C#</td><td class="tab" x-lang="VisualBasic" onclick="toggleClass('syntaxTabs','x-lang','VisualBasic','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','VisualBasic','display','block','none');">Visual Basic</td><td class="tab" x-lang="ManagedCPlusPlus" onclick="toggleClass('syntaxTabs','x-lang','ManagedCPlusPlus','activeTab','tab'); toggleStyle('syntaxBlocks','x-lang','ManagedCPlusPlus','display','block','none');">Visual C++</td></tr></table><div id="syntaxBlocks"><div class="code" x-lang="CSharp"><pre xml:space="preserve">
<span class="keyword">namespace</span> <span class="identifier">ICSharpCode.AvalonEdit.Utils</span></pre></div><div class="code" x-lang="VisualBasic"><pre xml:space="preserve">
<span class="keyword">Namespace</span> <span class="identifier">ICSharpCode.AvalonEdit.Utils</span></pre></div><div class="code" x-lang="ManagedCPlusPlus"><pre xml:space="preserve">
<span class="keyword">namespace</span> <span class="identifier">ICSharpCode.AvalonEdit.Utils</span></pre></div></div></div></div></div><div class="section"><div class="sectionTitle" onclick="toggleSection(this.parentNode)"><img src="../icons/collapse_all.gif" /> Types</div><div class="sectionContent"><div id="typeSection"><table class="filter"><tr class="tabs" id="typeFilter"><td class="tab" value="all" onclick="toggleClass('typeFilter','value','all','activeTab','tab'); processSubgroup('all', 'type'); processList('typeList','filterElement', 'type');">All Types</td><td class="tab" value="class" onclick="toggleClass('typeFilter','value','class','activeTab','tab'); processSubgroup('class', 'type'); processList('typeList','filterElement','type');">Classes</td><td class="tab" value="structure" onclick="toggleClass('typeFilter','value','structure','activeTab','tab'); processSubgroup('structure', 'type'); processList('typeList','filterElement','type');">Structures</td></tr></table><table id="typeList" class="members"><tr><th class="iconColumn">Icon</th><th class="nameColumn">Type</th><th class="descriptionColumn">Description</th></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="627615b4-8394-2926-15b9-88e439dffe90.htm">CharRope</a></b></td><td><div class="summary">
            Poor man's template specialization: extension methods for Rope&lt;char&gt;.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="55668e4c-5b60-1383-4e4d-ef378f98c842.htm">CompressingTreeList<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            A IList{T} implementation that has efficient insertion and removal (in O(lg n) time)
            and that saves memory by allocating only one node when a value is repeated in adjacent indices.
            Based on this "compression", it also supports efficient InsertRange/SetRange/RemoveRange operations.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="2d8554ff-dd43-78d7-6470-a7716f590398.htm">Deque<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            Double-ended queue.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="49309776-8e7d-3a69-2f2b-5bd6da718f5a.htm">DocumentPrinter</a></b></td><td><div class="summary">
            Helps printing documents.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="6b2ed33b-7dae-bf3c-eb4e-24b80dc64a20.htm">FileReader</a></b></td><td><div class="summary">
            Class that can open text files with auto-detection of the encoding.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="636425c6-2974-b561-382b-48d0b2b7e7e1.htm">ImmutableStack<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            An immutable stack.
            
            Using 'foreach' on the stack will return the items from top to bottom (in the order they would be popped).
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="9e0f3ce7-31e9-03ba-8705-ff4e6f3dc7c3.htm">NullSafeCollection<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            A collection that cannot contain null values.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="14f961f6-d3f3-b612-314a-4e59696dafee.htm">PixelSnapHelpers</a></b></td><td><div class="summary">
            Contains static helper methods for aligning stuff on a whole number of pixels.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="979bc290-b612-263d-988e-fa1599f2e205.htm">PropertyChangedWeakEventManager</a></b></td><td><div class="summary">
            WeakEventManager for INotifyPropertyChanged.PropertyChanged.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="48dbe0ee-a6bb-e1ff-0926-f16d958bd888.htm">Rope<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>T<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            A kind of List&lt;T&gt;, but more efficient for random insertions/removal.
            Also has cheap Clone() and SubRope() implementations.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="02c8ada1-1a80-539d-7322-560b60718731.htm">RopeTextReader</a></b></td><td><div class="summary">
            TextReader implementation that reads text from a rope.
            </div><br /></td></tr><tr data="structure; public"><td><img src="../icons/pubstructure.gif" /></td><td><b><a href="b3897f42-dafd-1c20-38d1-3920f77e9b8b.htm">StringSegment</a></b></td><td><div class="summary">
            Represents a string with a segment.
            Similar to System.ArraySegment&lt;T&gt;, but for strings instead of arrays.
            </div><br /></td></tr><tr data="class; public"><td><img src="../icons/pubclass.gif" /></td><td><b><a href="e3072e65-41ea-cdc3-b613-097afe0834da.htm">WeakEventManagerBase<span class="languageSpecificText"><span class="cs">&lt;</span><span class="vb">(Of </span><span class="cpp">&lt;</span><span class="nu">(</span><span class="fs">&lt;'</span></span>TManager, TEventSource<span class="languageSpecificText"><span class="cs">&gt;</span><span class="vb">)</span><span class="cpp">&gt;</span><span class="nu">)</span><span class="fs">&gt;</span></span></a></b></td><td><div class="summary">
            WeakEventManager with AddListener/RemoveListener and CurrentManager implementation.
            Helps implementing the WeakEventManager pattern with less code.
            </div><br /></td></tr></table></div></div></div><div id="footer"><p />Copyright 2008-2014, Daniel Grunwald</div></div></body></html>